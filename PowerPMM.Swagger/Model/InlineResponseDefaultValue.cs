/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefaultValue
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefaultValue :  IEquatable<InlineResponseDefaultValue>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefaultValue" /> class.
        /// </summary>
        /// <param name="id">id.</param>
        /// <param name="systemVersion">systemVersion.</param>
        /// <param name="name">name.</param>
        /// <param name="displayName">displayName.</param>
        /// <param name="businessProfileId">businessProfileId.</param>
        /// <param name="systemCreatedAt">systemCreatedAt.</param>
        /// <param name="systemCreatedBy">systemCreatedBy.</param>
        /// <param name="systemModifiedAt">systemModifiedAt.</param>
        /// <param name="systemModifiedBy">systemModifiedBy.</param>
        public InlineResponseDefaultValue(string id = default(string), string systemVersion = default(string), string name = default(string), string displayName = default(string), string businessProfileId = default(string), DateTime? systemCreatedAt = default(DateTime?), string systemCreatedBy = default(string), DateTime? systemModifiedAt = default(DateTime?), string systemModifiedBy = default(string))
        {
            this.Id = id;
            this.SystemVersion = systemVersion;
            this.Name = name;
            this.DisplayName = displayName;
            this.BusinessProfileId = businessProfileId;
            this.SystemCreatedAt = systemCreatedAt;
            this.SystemCreatedBy = systemCreatedBy;
            this.SystemModifiedAt = systemModifiedAt;
            this.SystemModifiedBy = systemModifiedBy;
        }
        
        /// <summary>
        /// id
        /// </summary>
        /// <value>id</value>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public string Id { get; set; }

        /// <summary>
        /// systemVersion
        /// </summary>
        /// <value>systemVersion</value>
        [DataMember(Name="systemVersion", EmitDefaultValue=false)]
        public string SystemVersion { get; set; }

        /// <summary>
        /// name
        /// </summary>
        /// <value>name</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// displayName
        /// </summary>
        /// <value>displayName</value>
        [DataMember(Name="displayName", EmitDefaultValue=false)]
        public string DisplayName { get; set; }

        /// <summary>
        /// businessProfileId
        /// </summary>
        /// <value>businessProfileId</value>
        [DataMember(Name="businessProfileId", EmitDefaultValue=false)]
        public string BusinessProfileId { get; set; }

        /// <summary>
        /// systemCreatedAt
        /// </summary>
        /// <value>systemCreatedAt</value>
        [DataMember(Name="systemCreatedAt", EmitDefaultValue=false)]
        public DateTime? SystemCreatedAt { get; set; }

        /// <summary>
        /// systemCreatedBy
        /// </summary>
        /// <value>systemCreatedBy</value>
        [DataMember(Name="systemCreatedBy", EmitDefaultValue=false)]
        public string SystemCreatedBy { get; set; }

        /// <summary>
        /// systemModifiedAt
        /// </summary>
        /// <value>systemModifiedAt</value>
        [DataMember(Name="systemModifiedAt", EmitDefaultValue=false)]
        public DateTime? SystemModifiedAt { get; set; }

        /// <summary>
        /// systemModifiedBy
        /// </summary>
        /// <value>systemModifiedBy</value>
        [DataMember(Name="systemModifiedBy", EmitDefaultValue=false)]
        public string SystemModifiedBy { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefaultValue {\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  SystemVersion: ").Append(SystemVersion).Append("\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  DisplayName: ").Append(DisplayName).Append("\n");
            sb.Append("  BusinessProfileId: ").Append(BusinessProfileId).Append("\n");
            sb.Append("  SystemCreatedAt: ").Append(SystemCreatedAt).Append("\n");
            sb.Append("  SystemCreatedBy: ").Append(SystemCreatedBy).Append("\n");
            sb.Append("  SystemModifiedAt: ").Append(SystemModifiedAt).Append("\n");
            sb.Append("  SystemModifiedBy: ").Append(SystemModifiedBy).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefaultValue);
        }

        /// <summary>
        /// Returns true if InlineResponseDefaultValue instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefaultValue to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefaultValue input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.SystemVersion == input.SystemVersion ||
                    (this.SystemVersion != null &&
                    this.SystemVersion.Equals(input.SystemVersion))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.DisplayName == input.DisplayName ||
                    (this.DisplayName != null &&
                    this.DisplayName.Equals(input.DisplayName))
                ) && 
                (
                    this.BusinessProfileId == input.BusinessProfileId ||
                    (this.BusinessProfileId != null &&
                    this.BusinessProfileId.Equals(input.BusinessProfileId))
                ) && 
                (
                    this.SystemCreatedAt == input.SystemCreatedAt ||
                    (this.SystemCreatedAt != null &&
                    this.SystemCreatedAt.Equals(input.SystemCreatedAt))
                ) && 
                (
                    this.SystemCreatedBy == input.SystemCreatedBy ||
                    (this.SystemCreatedBy != null &&
                    this.SystemCreatedBy.Equals(input.SystemCreatedBy))
                ) && 
                (
                    this.SystemModifiedAt == input.SystemModifiedAt ||
                    (this.SystemModifiedAt != null &&
                    this.SystemModifiedAt.Equals(input.SystemModifiedAt))
                ) && 
                (
                    this.SystemModifiedBy == input.SystemModifiedBy ||
                    (this.SystemModifiedBy != null &&
                    this.SystemModifiedBy.Equals(input.SystemModifiedBy))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.SystemVersion != null)
                    hashCode = hashCode * 59 + this.SystemVersion.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.DisplayName != null)
                    hashCode = hashCode * 59 + this.DisplayName.GetHashCode();
                if (this.BusinessProfileId != null)
                    hashCode = hashCode * 59 + this.BusinessProfileId.GetHashCode();
                if (this.SystemCreatedAt != null)
                    hashCode = hashCode * 59 + this.SystemCreatedAt.GetHashCode();
                if (this.SystemCreatedBy != null)
                    hashCode = hashCode * 59 + this.SystemCreatedBy.GetHashCode();
                if (this.SystemModifiedAt != null)
                    hashCode = hashCode * 59 + this.SystemModifiedAt.GetHashCode();
                if (this.SystemModifiedBy != null)
                    hashCode = hashCode * 59 + this.SystemModifiedBy.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
