/* 
 * Power MES Connector
 *
 * The custom connector used by Power MES by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault5Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault5Value :  IEquatable<InlineResponseDefault5Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault5Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="employeeEntryEntryNo">employeeEntryEntryNo.</param>
        /// <param name="entryNo">entryNo.</param>
        /// <param name="message">message.</param>
        /// <param name="read">read.</param>
        /// <param name="panelSetupId">panelSetupId.</param>
        public InlineResponseDefault5Value(string odataEtag = default(string), string systemId = default(string), decimal? employeeEntryEntryNo = default(decimal?), decimal? entryNo = default(decimal?), string message = default(string), bool? read = default(bool?), string panelSetupId = default(string))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.EmployeeEntryEntryNo = employeeEntryEntryNo;
            this.EntryNo = entryNo;
            this.Message = message;
            this.Read = read;
            this.PanelSetupId = panelSetupId;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// employeeEntryEntryNo
        /// </summary>
        /// <value>employeeEntryEntryNo</value>
        [DataMember(Name="employeeEntryEntryNo", EmitDefaultValue=false)]
        public decimal? EmployeeEntryEntryNo { get; set; }

        /// <summary>
        /// entryNo
        /// </summary>
        /// <value>entryNo</value>
        [DataMember(Name="entryNo", EmitDefaultValue=false)]
        public decimal? EntryNo { get; set; }

        /// <summary>
        /// message
        /// </summary>
        /// <value>message</value>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// read
        /// </summary>
        /// <value>read</value>
        [DataMember(Name="read", EmitDefaultValue=false)]
        public bool? Read { get; set; }

        /// <summary>
        /// panelSetupId
        /// </summary>
        /// <value>panelSetupId</value>
        [DataMember(Name="panelSetupId", EmitDefaultValue=false)]
        public string PanelSetupId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault5Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  EmployeeEntryEntryNo: ").Append(EmployeeEntryEntryNo).Append("\n");
            sb.Append("  EntryNo: ").Append(EntryNo).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  Read: ").Append(Read).Append("\n");
            sb.Append("  PanelSetupId: ").Append(PanelSetupId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault5Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault5Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault5Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault5Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.EmployeeEntryEntryNo == input.EmployeeEntryEntryNo ||
                    (this.EmployeeEntryEntryNo != null &&
                    this.EmployeeEntryEntryNo.Equals(input.EmployeeEntryEntryNo))
                ) && 
                (
                    this.EntryNo == input.EntryNo ||
                    (this.EntryNo != null &&
                    this.EntryNo.Equals(input.EntryNo))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.Read == input.Read ||
                    (this.Read != null &&
                    this.Read.Equals(input.Read))
                ) && 
                (
                    this.PanelSetupId == input.PanelSetupId ||
                    (this.PanelSetupId != null &&
                    this.PanelSetupId.Equals(input.PanelSetupId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.EmployeeEntryEntryNo != null)
                    hashCode = hashCode * 59 + this.EmployeeEntryEntryNo.GetHashCode();
                if (this.EntryNo != null)
                    hashCode = hashCode * 59 + this.EntryNo.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.Read != null)
                    hashCode = hashCode * 59 + this.Read.GetHashCode();
                if (this.PanelSetupId != null)
                    hashCode = hashCode * 59 + this.PanelSetupId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
