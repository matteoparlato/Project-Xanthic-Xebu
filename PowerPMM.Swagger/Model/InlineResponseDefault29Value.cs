/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault29Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault29Value :  IEquatable<InlineResponseDefault29Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault29Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="employeeNo">employeeNo.</param>
        /// <param name="activityInt">activityInt.</param>
        /// <param name="activityCaption">activityCaption.</param>
        /// <param name="categoryInt">categoryInt.</param>
        /// <param name="categoryCaption">categoryCaption.</param>
        /// <param name="groupInt">groupInt.</param>
        /// <param name="groupCaption">groupCaption.</param>
        /// <param name="groupSequence">groupSequence.</param>
        /// <param name="sequence">sequence.</param>
        /// <param name="recordsCount">recordsCount.</param>
        /// <param name="executionModeInt">executionModeInt.</param>
        /// <param name="executionModeCaption">executionModeCaption.</param>
        /// <param name="defaultActionInt">defaultActionInt.</param>
        /// <param name="defaultActionCaption">defaultActionCaption.</param>
        /// <param name="allowPosting">allowPosting.</param>
        /// <param name="postingExecutionModeInt">postingExecutionModeInt.</param>
        /// <param name="postingExecutionModeCaption">postingExecutionModeCaption.</param>
        /// <param name="allowSourceReset">allowSourceReset.</param>
        /// <param name="showRecordCounter">showRecordCounter.</param>
        /// <param name="notifyOnSuccess">notifyOnSuccess.</param>
        /// <param name="visibility">visibility.</param>
        /// <param name="visibilityInt">visibilityInt.</param>
        /// <param name="additionalFields">additionalFields.</param>
        /// <param name="customType">customType.</param>
        /// <param name="customTypeInt">customTypeInt.</param>
        /// <param name="customTypeCaption">customTypeCaption.</param>
        /// <param name="allowCreation">allowCreation.</param>
        public InlineResponseDefault29Value(string odataEtag = default(string), string systemId = default(string), string employeeNo = default(string), decimal? activityInt = default(decimal?), string activityCaption = default(string), decimal? categoryInt = default(decimal?), string categoryCaption = default(string), decimal? groupInt = default(decimal?), string groupCaption = default(string), decimal? groupSequence = default(decimal?), decimal? sequence = default(decimal?), decimal? recordsCount = default(decimal?), decimal? executionModeInt = default(decimal?), string executionModeCaption = default(string), decimal? defaultActionInt = default(decimal?), string defaultActionCaption = default(string), bool? allowPosting = default(bool?), decimal? postingExecutionModeInt = default(decimal?), string postingExecutionModeCaption = default(string), bool? allowSourceReset = default(bool?), bool? showRecordCounter = default(bool?), bool? notifyOnSuccess = default(bool?), string visibility = default(string), decimal? visibilityInt = default(decimal?), string additionalFields = default(string), string customType = default(string), decimal? customTypeInt = default(decimal?), string customTypeCaption = default(string), bool? allowCreation = default(bool?))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.EmployeeNo = employeeNo;
            this.ActivityInt = activityInt;
            this.ActivityCaption = activityCaption;
            this.CategoryInt = categoryInt;
            this.CategoryCaption = categoryCaption;
            this.GroupInt = groupInt;
            this.GroupCaption = groupCaption;
            this.GroupSequence = groupSequence;
            this.Sequence = sequence;
            this.RecordsCount = recordsCount;
            this.ExecutionModeInt = executionModeInt;
            this.ExecutionModeCaption = executionModeCaption;
            this.DefaultActionInt = defaultActionInt;
            this.DefaultActionCaption = defaultActionCaption;
            this.AllowPosting = allowPosting;
            this.PostingExecutionModeInt = postingExecutionModeInt;
            this.PostingExecutionModeCaption = postingExecutionModeCaption;
            this.AllowSourceReset = allowSourceReset;
            this.ShowRecordCounter = showRecordCounter;
            this.NotifyOnSuccess = notifyOnSuccess;
            this.Visibility = visibility;
            this.VisibilityInt = visibilityInt;
            this.AdditionalFields = additionalFields;
            this.CustomType = customType;
            this.CustomTypeInt = customTypeInt;
            this.CustomTypeCaption = customTypeCaption;
            this.AllowCreation = allowCreation;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// employeeNo
        /// </summary>
        /// <value>employeeNo</value>
        [DataMember(Name="employeeNo", EmitDefaultValue=false)]
        public string EmployeeNo { get; set; }

        /// <summary>
        /// activityInt
        /// </summary>
        /// <value>activityInt</value>
        [DataMember(Name="activityInt", EmitDefaultValue=false)]
        public decimal? ActivityInt { get; set; }

        /// <summary>
        /// activityCaption
        /// </summary>
        /// <value>activityCaption</value>
        [DataMember(Name="activityCaption", EmitDefaultValue=false)]
        public string ActivityCaption { get; set; }

        /// <summary>
        /// categoryInt
        /// </summary>
        /// <value>categoryInt</value>
        [DataMember(Name="categoryInt", EmitDefaultValue=false)]
        public decimal? CategoryInt { get; set; }

        /// <summary>
        /// categoryCaption
        /// </summary>
        /// <value>categoryCaption</value>
        [DataMember(Name="categoryCaption", EmitDefaultValue=false)]
        public string CategoryCaption { get; set; }

        /// <summary>
        /// groupInt
        /// </summary>
        /// <value>groupInt</value>
        [DataMember(Name="groupInt", EmitDefaultValue=false)]
        public decimal? GroupInt { get; set; }

        /// <summary>
        /// groupCaption
        /// </summary>
        /// <value>groupCaption</value>
        [DataMember(Name="groupCaption", EmitDefaultValue=false)]
        public string GroupCaption { get; set; }

        /// <summary>
        /// groupSequence
        /// </summary>
        /// <value>groupSequence</value>
        [DataMember(Name="groupSequence", EmitDefaultValue=false)]
        public decimal? GroupSequence { get; set; }

        /// <summary>
        /// sequence
        /// </summary>
        /// <value>sequence</value>
        [DataMember(Name="sequence", EmitDefaultValue=false)]
        public decimal? Sequence { get; set; }

        /// <summary>
        /// recordsCount
        /// </summary>
        /// <value>recordsCount</value>
        [DataMember(Name="recordsCount", EmitDefaultValue=false)]
        public decimal? RecordsCount { get; set; }

        /// <summary>
        /// executionModeInt
        /// </summary>
        /// <value>executionModeInt</value>
        [DataMember(Name="executionModeInt", EmitDefaultValue=false)]
        public decimal? ExecutionModeInt { get; set; }

        /// <summary>
        /// executionModeCaption
        /// </summary>
        /// <value>executionModeCaption</value>
        [DataMember(Name="executionModeCaption", EmitDefaultValue=false)]
        public string ExecutionModeCaption { get; set; }

        /// <summary>
        /// defaultActionInt
        /// </summary>
        /// <value>defaultActionInt</value>
        [DataMember(Name="defaultActionInt", EmitDefaultValue=false)]
        public decimal? DefaultActionInt { get; set; }

        /// <summary>
        /// defaultActionCaption
        /// </summary>
        /// <value>defaultActionCaption</value>
        [DataMember(Name="defaultActionCaption", EmitDefaultValue=false)]
        public string DefaultActionCaption { get; set; }

        /// <summary>
        /// allowPosting
        /// </summary>
        /// <value>allowPosting</value>
        [DataMember(Name="allowPosting", EmitDefaultValue=false)]
        public bool? AllowPosting { get; set; }

        /// <summary>
        /// postingExecutionModeInt
        /// </summary>
        /// <value>postingExecutionModeInt</value>
        [DataMember(Name="postingExecutionModeInt", EmitDefaultValue=false)]
        public decimal? PostingExecutionModeInt { get; set; }

        /// <summary>
        /// postingExecutionModeCaption
        /// </summary>
        /// <value>postingExecutionModeCaption</value>
        [DataMember(Name="postingExecutionModeCaption", EmitDefaultValue=false)]
        public string PostingExecutionModeCaption { get; set; }

        /// <summary>
        /// allowSourceReset
        /// </summary>
        /// <value>allowSourceReset</value>
        [DataMember(Name="allowSourceReset", EmitDefaultValue=false)]
        public bool? AllowSourceReset { get; set; }

        /// <summary>
        /// showRecordCounter
        /// </summary>
        /// <value>showRecordCounter</value>
        [DataMember(Name="showRecordCounter", EmitDefaultValue=false)]
        public bool? ShowRecordCounter { get; set; }

        /// <summary>
        /// notifyOnSuccess
        /// </summary>
        /// <value>notifyOnSuccess</value>
        [DataMember(Name="notifyOnSuccess", EmitDefaultValue=false)]
        public bool? NotifyOnSuccess { get; set; }

        /// <summary>
        /// visibility
        /// </summary>
        /// <value>visibility</value>
        [DataMember(Name="visibility", EmitDefaultValue=false)]
        public string Visibility { get; set; }

        /// <summary>
        /// visibilityInt
        /// </summary>
        /// <value>visibilityInt</value>
        [DataMember(Name="visibilityInt", EmitDefaultValue=false)]
        public decimal? VisibilityInt { get; set; }

        /// <summary>
        /// additionalFields
        /// </summary>
        /// <value>additionalFields</value>
        [DataMember(Name="additionalFields", EmitDefaultValue=false)]
        public string AdditionalFields { get; set; }

        /// <summary>
        /// customType
        /// </summary>
        /// <value>customType</value>
        [DataMember(Name="customType", EmitDefaultValue=false)]
        public string CustomType { get; set; }

        /// <summary>
        /// customTypeInt
        /// </summary>
        /// <value>customTypeInt</value>
        [DataMember(Name="customTypeInt", EmitDefaultValue=false)]
        public decimal? CustomTypeInt { get; set; }

        /// <summary>
        /// customTypeCaption
        /// </summary>
        /// <value>customTypeCaption</value>
        [DataMember(Name="customTypeCaption", EmitDefaultValue=false)]
        public string CustomTypeCaption { get; set; }

        /// <summary>
        /// allowCreation
        /// </summary>
        /// <value>allowCreation</value>
        [DataMember(Name="allowCreation", EmitDefaultValue=false)]
        public bool? AllowCreation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault29Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  EmployeeNo: ").Append(EmployeeNo).Append("\n");
            sb.Append("  ActivityInt: ").Append(ActivityInt).Append("\n");
            sb.Append("  ActivityCaption: ").Append(ActivityCaption).Append("\n");
            sb.Append("  CategoryInt: ").Append(CategoryInt).Append("\n");
            sb.Append("  CategoryCaption: ").Append(CategoryCaption).Append("\n");
            sb.Append("  GroupInt: ").Append(GroupInt).Append("\n");
            sb.Append("  GroupCaption: ").Append(GroupCaption).Append("\n");
            sb.Append("  GroupSequence: ").Append(GroupSequence).Append("\n");
            sb.Append("  Sequence: ").Append(Sequence).Append("\n");
            sb.Append("  RecordsCount: ").Append(RecordsCount).Append("\n");
            sb.Append("  ExecutionModeInt: ").Append(ExecutionModeInt).Append("\n");
            sb.Append("  ExecutionModeCaption: ").Append(ExecutionModeCaption).Append("\n");
            sb.Append("  DefaultActionInt: ").Append(DefaultActionInt).Append("\n");
            sb.Append("  DefaultActionCaption: ").Append(DefaultActionCaption).Append("\n");
            sb.Append("  AllowPosting: ").Append(AllowPosting).Append("\n");
            sb.Append("  PostingExecutionModeInt: ").Append(PostingExecutionModeInt).Append("\n");
            sb.Append("  PostingExecutionModeCaption: ").Append(PostingExecutionModeCaption).Append("\n");
            sb.Append("  AllowSourceReset: ").Append(AllowSourceReset).Append("\n");
            sb.Append("  ShowRecordCounter: ").Append(ShowRecordCounter).Append("\n");
            sb.Append("  NotifyOnSuccess: ").Append(NotifyOnSuccess).Append("\n");
            sb.Append("  Visibility: ").Append(Visibility).Append("\n");
            sb.Append("  VisibilityInt: ").Append(VisibilityInt).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("  CustomType: ").Append(CustomType).Append("\n");
            sb.Append("  CustomTypeInt: ").Append(CustomTypeInt).Append("\n");
            sb.Append("  CustomTypeCaption: ").Append(CustomTypeCaption).Append("\n");
            sb.Append("  AllowCreation: ").Append(AllowCreation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault29Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault29Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault29Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault29Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.EmployeeNo == input.EmployeeNo ||
                    (this.EmployeeNo != null &&
                    this.EmployeeNo.Equals(input.EmployeeNo))
                ) && 
                (
                    this.ActivityInt == input.ActivityInt ||
                    (this.ActivityInt != null &&
                    this.ActivityInt.Equals(input.ActivityInt))
                ) && 
                (
                    this.ActivityCaption == input.ActivityCaption ||
                    (this.ActivityCaption != null &&
                    this.ActivityCaption.Equals(input.ActivityCaption))
                ) && 
                (
                    this.CategoryInt == input.CategoryInt ||
                    (this.CategoryInt != null &&
                    this.CategoryInt.Equals(input.CategoryInt))
                ) && 
                (
                    this.CategoryCaption == input.CategoryCaption ||
                    (this.CategoryCaption != null &&
                    this.CategoryCaption.Equals(input.CategoryCaption))
                ) && 
                (
                    this.GroupInt == input.GroupInt ||
                    (this.GroupInt != null &&
                    this.GroupInt.Equals(input.GroupInt))
                ) && 
                (
                    this.GroupCaption == input.GroupCaption ||
                    (this.GroupCaption != null &&
                    this.GroupCaption.Equals(input.GroupCaption))
                ) && 
                (
                    this.GroupSequence == input.GroupSequence ||
                    (this.GroupSequence != null &&
                    this.GroupSequence.Equals(input.GroupSequence))
                ) && 
                (
                    this.Sequence == input.Sequence ||
                    (this.Sequence != null &&
                    this.Sequence.Equals(input.Sequence))
                ) && 
                (
                    this.RecordsCount == input.RecordsCount ||
                    (this.RecordsCount != null &&
                    this.RecordsCount.Equals(input.RecordsCount))
                ) && 
                (
                    this.ExecutionModeInt == input.ExecutionModeInt ||
                    (this.ExecutionModeInt != null &&
                    this.ExecutionModeInt.Equals(input.ExecutionModeInt))
                ) && 
                (
                    this.ExecutionModeCaption == input.ExecutionModeCaption ||
                    (this.ExecutionModeCaption != null &&
                    this.ExecutionModeCaption.Equals(input.ExecutionModeCaption))
                ) && 
                (
                    this.DefaultActionInt == input.DefaultActionInt ||
                    (this.DefaultActionInt != null &&
                    this.DefaultActionInt.Equals(input.DefaultActionInt))
                ) && 
                (
                    this.DefaultActionCaption == input.DefaultActionCaption ||
                    (this.DefaultActionCaption != null &&
                    this.DefaultActionCaption.Equals(input.DefaultActionCaption))
                ) && 
                (
                    this.AllowPosting == input.AllowPosting ||
                    (this.AllowPosting != null &&
                    this.AllowPosting.Equals(input.AllowPosting))
                ) && 
                (
                    this.PostingExecutionModeInt == input.PostingExecutionModeInt ||
                    (this.PostingExecutionModeInt != null &&
                    this.PostingExecutionModeInt.Equals(input.PostingExecutionModeInt))
                ) && 
                (
                    this.PostingExecutionModeCaption == input.PostingExecutionModeCaption ||
                    (this.PostingExecutionModeCaption != null &&
                    this.PostingExecutionModeCaption.Equals(input.PostingExecutionModeCaption))
                ) && 
                (
                    this.AllowSourceReset == input.AllowSourceReset ||
                    (this.AllowSourceReset != null &&
                    this.AllowSourceReset.Equals(input.AllowSourceReset))
                ) && 
                (
                    this.ShowRecordCounter == input.ShowRecordCounter ||
                    (this.ShowRecordCounter != null &&
                    this.ShowRecordCounter.Equals(input.ShowRecordCounter))
                ) && 
                (
                    this.NotifyOnSuccess == input.NotifyOnSuccess ||
                    (this.NotifyOnSuccess != null &&
                    this.NotifyOnSuccess.Equals(input.NotifyOnSuccess))
                ) && 
                (
                    this.Visibility == input.Visibility ||
                    (this.Visibility != null &&
                    this.Visibility.Equals(input.Visibility))
                ) && 
                (
                    this.VisibilityInt == input.VisibilityInt ||
                    (this.VisibilityInt != null &&
                    this.VisibilityInt.Equals(input.VisibilityInt))
                ) && 
                (
                    this.AdditionalFields == input.AdditionalFields ||
                    (this.AdditionalFields != null &&
                    this.AdditionalFields.Equals(input.AdditionalFields))
                ) && 
                (
                    this.CustomType == input.CustomType ||
                    (this.CustomType != null &&
                    this.CustomType.Equals(input.CustomType))
                ) && 
                (
                    this.CustomTypeInt == input.CustomTypeInt ||
                    (this.CustomTypeInt != null &&
                    this.CustomTypeInt.Equals(input.CustomTypeInt))
                ) && 
                (
                    this.CustomTypeCaption == input.CustomTypeCaption ||
                    (this.CustomTypeCaption != null &&
                    this.CustomTypeCaption.Equals(input.CustomTypeCaption))
                ) && 
                (
                    this.AllowCreation == input.AllowCreation ||
                    (this.AllowCreation != null &&
                    this.AllowCreation.Equals(input.AllowCreation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.EmployeeNo != null)
                    hashCode = hashCode * 59 + this.EmployeeNo.GetHashCode();
                if (this.ActivityInt != null)
                    hashCode = hashCode * 59 + this.ActivityInt.GetHashCode();
                if (this.ActivityCaption != null)
                    hashCode = hashCode * 59 + this.ActivityCaption.GetHashCode();
                if (this.CategoryInt != null)
                    hashCode = hashCode * 59 + this.CategoryInt.GetHashCode();
                if (this.CategoryCaption != null)
                    hashCode = hashCode * 59 + this.CategoryCaption.GetHashCode();
                if (this.GroupInt != null)
                    hashCode = hashCode * 59 + this.GroupInt.GetHashCode();
                if (this.GroupCaption != null)
                    hashCode = hashCode * 59 + this.GroupCaption.GetHashCode();
                if (this.GroupSequence != null)
                    hashCode = hashCode * 59 + this.GroupSequence.GetHashCode();
                if (this.Sequence != null)
                    hashCode = hashCode * 59 + this.Sequence.GetHashCode();
                if (this.RecordsCount != null)
                    hashCode = hashCode * 59 + this.RecordsCount.GetHashCode();
                if (this.ExecutionModeInt != null)
                    hashCode = hashCode * 59 + this.ExecutionModeInt.GetHashCode();
                if (this.ExecutionModeCaption != null)
                    hashCode = hashCode * 59 + this.ExecutionModeCaption.GetHashCode();
                if (this.DefaultActionInt != null)
                    hashCode = hashCode * 59 + this.DefaultActionInt.GetHashCode();
                if (this.DefaultActionCaption != null)
                    hashCode = hashCode * 59 + this.DefaultActionCaption.GetHashCode();
                if (this.AllowPosting != null)
                    hashCode = hashCode * 59 + this.AllowPosting.GetHashCode();
                if (this.PostingExecutionModeInt != null)
                    hashCode = hashCode * 59 + this.PostingExecutionModeInt.GetHashCode();
                if (this.PostingExecutionModeCaption != null)
                    hashCode = hashCode * 59 + this.PostingExecutionModeCaption.GetHashCode();
                if (this.AllowSourceReset != null)
                    hashCode = hashCode * 59 + this.AllowSourceReset.GetHashCode();
                if (this.ShowRecordCounter != null)
                    hashCode = hashCode * 59 + this.ShowRecordCounter.GetHashCode();
                if (this.NotifyOnSuccess != null)
                    hashCode = hashCode * 59 + this.NotifyOnSuccess.GetHashCode();
                if (this.Visibility != null)
                    hashCode = hashCode * 59 + this.Visibility.GetHashCode();
                if (this.VisibilityInt != null)
                    hashCode = hashCode * 59 + this.VisibilityInt.GetHashCode();
                if (this.AdditionalFields != null)
                    hashCode = hashCode * 59 + this.AdditionalFields.GetHashCode();
                if (this.CustomType != null)
                    hashCode = hashCode * 59 + this.CustomType.GetHashCode();
                if (this.CustomTypeInt != null)
                    hashCode = hashCode * 59 + this.CustomTypeInt.GetHashCode();
                if (this.CustomTypeCaption != null)
                    hashCode = hashCode * 59 + this.CustomTypeCaption.GetHashCode();
                if (this.AllowCreation != null)
                    hashCode = hashCode * 59 + this.AllowCreation.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
