/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault6Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault6Value :  IEquatable<InlineResponseDefault6Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault6Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="defaultLanguageCode">defaultLanguageCode.</param>
        /// <param name="defaultTheme">defaultTheme.</param>
        /// <param name="refresh">refresh.</param>
        public InlineResponseDefault6Value(string odataEtag = default(string), string systemId = default(string), string defaultLanguageCode = default(string), string defaultTheme = default(string), decimal? refresh = default(decimal?))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.DefaultLanguageCode = defaultLanguageCode;
            this.DefaultTheme = defaultTheme;
            this.Refresh = refresh;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// defaultLanguageCode
        /// </summary>
        /// <value>defaultLanguageCode</value>
        [DataMember(Name="defaultLanguageCode", EmitDefaultValue=false)]
        public string DefaultLanguageCode { get; set; }

        /// <summary>
        /// defaultTheme
        /// </summary>
        /// <value>defaultTheme</value>
        [DataMember(Name="defaultTheme", EmitDefaultValue=false)]
        public string DefaultTheme { get; set; }

        /// <summary>
        /// refresh
        /// </summary>
        /// <value>refresh</value>
        [DataMember(Name="refresh", EmitDefaultValue=false)]
        public decimal? Refresh { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault6Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  DefaultLanguageCode: ").Append(DefaultLanguageCode).Append("\n");
            sb.Append("  DefaultTheme: ").Append(DefaultTheme).Append("\n");
            sb.Append("  Refresh: ").Append(Refresh).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault6Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault6Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault6Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault6Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.DefaultLanguageCode == input.DefaultLanguageCode ||
                    (this.DefaultLanguageCode != null &&
                    this.DefaultLanguageCode.Equals(input.DefaultLanguageCode))
                ) && 
                (
                    this.DefaultTheme == input.DefaultTheme ||
                    (this.DefaultTheme != null &&
                    this.DefaultTheme.Equals(input.DefaultTheme))
                ) && 
                (
                    this.Refresh == input.Refresh ||
                    (this.Refresh != null &&
                    this.Refresh.Equals(input.Refresh))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.DefaultLanguageCode != null)
                    hashCode = hashCode * 59 + this.DefaultLanguageCode.GetHashCode();
                if (this.DefaultTheme != null)
                    hashCode = hashCode * 59 + this.DefaultTheme.GetHashCode();
                if (this.Refresh != null)
                    hashCode = hashCode * 59 + this.Refresh.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
