/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault19Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault19Value :  IEquatable<InlineResponseDefault19Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault19Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="code">code.</param>
        /// <param name="description">description.</param>
        /// <param name="description2">description2.</param>
        /// <param name="maintenanceCycleNo">maintenanceCycleNo.</param>
        /// <param name="maintenanceCycleLineNo">maintenanceCycleLineNo.</param>
        /// <param name="maintenanceCycleVersionNo">maintenanceCycleVersionNo.</param>
        public InlineResponseDefault19Value(string odataEtag = default(string), string systemId = default(string), string code = default(string), string description = default(string), string description2 = default(string), string maintenanceCycleNo = default(string), decimal? maintenanceCycleLineNo = default(decimal?), string maintenanceCycleVersionNo = default(string))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.Code = code;
            this.Description = description;
            this.Description2 = description2;
            this.MaintenanceCycleNo = maintenanceCycleNo;
            this.MaintenanceCycleLineNo = maintenanceCycleLineNo;
            this.MaintenanceCycleVersionNo = maintenanceCycleVersionNo;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// code
        /// </summary>
        /// <value>code</value>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public string Code { get; set; }

        /// <summary>
        /// description
        /// </summary>
        /// <value>description</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// description2
        /// </summary>
        /// <value>description2</value>
        [DataMember(Name="description2", EmitDefaultValue=false)]
        public string Description2 { get; set; }

        /// <summary>
        /// maintenanceCycleNo
        /// </summary>
        /// <value>maintenanceCycleNo</value>
        [DataMember(Name="maintenanceCycleNo", EmitDefaultValue=false)]
        public string MaintenanceCycleNo { get; set; }

        /// <summary>
        /// maintenanceCycleLineNo
        /// </summary>
        /// <value>maintenanceCycleLineNo</value>
        [DataMember(Name="maintenanceCycleLineNo", EmitDefaultValue=false)]
        public decimal? MaintenanceCycleLineNo { get; set; }

        /// <summary>
        /// maintenanceCycleVersionNo
        /// </summary>
        /// <value>maintenanceCycleVersionNo</value>
        [DataMember(Name="maintenanceCycleVersionNo", EmitDefaultValue=false)]
        public string MaintenanceCycleVersionNo { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault19Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  Description2: ").Append(Description2).Append("\n");
            sb.Append("  MaintenanceCycleNo: ").Append(MaintenanceCycleNo).Append("\n");
            sb.Append("  MaintenanceCycleLineNo: ").Append(MaintenanceCycleLineNo).Append("\n");
            sb.Append("  MaintenanceCycleVersionNo: ").Append(MaintenanceCycleVersionNo).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault19Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault19Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault19Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault19Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.Description2 == input.Description2 ||
                    (this.Description2 != null &&
                    this.Description2.Equals(input.Description2))
                ) && 
                (
                    this.MaintenanceCycleNo == input.MaintenanceCycleNo ||
                    (this.MaintenanceCycleNo != null &&
                    this.MaintenanceCycleNo.Equals(input.MaintenanceCycleNo))
                ) && 
                (
                    this.MaintenanceCycleLineNo == input.MaintenanceCycleLineNo ||
                    (this.MaintenanceCycleLineNo != null &&
                    this.MaintenanceCycleLineNo.Equals(input.MaintenanceCycleLineNo))
                ) && 
                (
                    this.MaintenanceCycleVersionNo == input.MaintenanceCycleVersionNo ||
                    (this.MaintenanceCycleVersionNo != null &&
                    this.MaintenanceCycleVersionNo.Equals(input.MaintenanceCycleVersionNo))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.Description2 != null)
                    hashCode = hashCode * 59 + this.Description2.GetHashCode();
                if (this.MaintenanceCycleNo != null)
                    hashCode = hashCode * 59 + this.MaintenanceCycleNo.GetHashCode();
                if (this.MaintenanceCycleLineNo != null)
                    hashCode = hashCode * 59 + this.MaintenanceCycleLineNo.GetHashCode();
                if (this.MaintenanceCycleVersionNo != null)
                    hashCode = hashCode * 59 + this.MaintenanceCycleVersionNo.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
