/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault17Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault17Value :  IEquatable<InlineResponseDefault17Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault17Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="closingDate">closingDate.</param>
        /// <param name="closingNote">closingNote.</param>
        /// <param name="contractReferenceNo">contractReferenceNo.</param>
        /// <param name="description">description.</param>
        /// <param name="externalMaintenance">externalMaintenance.</param>
        /// <param name="faultAreaCode">faultAreaCode.</param>
        /// <param name="faultCode">faultCode.</param>
        /// <param name="faultReasonCode">faultReasonCode.</param>
        /// <param name="faultSubAreaCode">faultSubAreaCode.</param>
        /// <param name="fromWorkRequest">fromWorkRequest.</param>
        /// <param name="machineNo">machineNo.</param>
        /// <param name="maintenanceCycleNo">maintenanceCycleNo.</param>
        /// <param name="maintenanceCycleVersion">maintenanceCycleVersion.</param>
        /// <param name="maintenancePointNo">maintenancePointNo.</param>
        /// <param name="maintenanceTypeCode">maintenanceTypeCode.</param>
        /// <param name="maintenanceWorkTypeCode">maintenanceWorkTypeCode.</param>
        /// <param name="no">no.</param>
        /// <param name="plannedStartingDateTime">plannedStartingDateTime.</param>
        /// <param name="predictedMaintenanceTime">predictedMaintenanceTime.</param>
        /// <param name="priorityStatus">priorityStatus.</param>
        /// <param name="priorityStatusAsInt">priorityStatusAsInt.</param>
        /// <param name="priorityStatusName">priorityStatusName.</param>
        /// <param name="resolutionCode">resolutionCode.</param>
        /// <param name="resourceGroupNo">resourceGroupNo.</param>
        /// <param name="resourceNo">resourceNo.</param>
        /// <param name="status">status.</param>
        /// <param name="statusAsInt">statusAsInt.</param>
        /// <param name="statusName">statusName.</param>
        /// <param name="stopProduction">stopProduction.</param>
        /// <param name="symptomCode">symptomCode.</param>
        /// <param name="vendorNo">vendorNo.</param>
        /// <param name="maintenanceType">maintenanceType.</param>
        /// <param name="comment">comment.</param>
        /// <param name="listFields">listFields.</param>
        /// <param name="detailFields">detailFields.</param>
        /// <param name="resourceNoFilter">resourceNoFilter.</param>
        public InlineResponseDefault17Value(string odataEtag = default(string), string systemId = default(string), DateTime? closingDate = default(DateTime?), string closingNote = default(string), string contractReferenceNo = default(string), string description = default(string), bool? externalMaintenance = default(bool?), string faultAreaCode = default(string), string faultCode = default(string), string faultReasonCode = default(string), string faultSubAreaCode = default(string), string fromWorkRequest = default(string), string machineNo = default(string), string maintenanceCycleNo = default(string), string maintenanceCycleVersion = default(string), string maintenancePointNo = default(string), string maintenanceTypeCode = default(string), string maintenanceWorkTypeCode = default(string), string no = default(string), DateTime? plannedStartingDateTime = default(DateTime?), decimal? predictedMaintenanceTime = default(decimal?), string priorityStatus = default(string), decimal? priorityStatusAsInt = default(decimal?), string priorityStatusName = default(string), string resolutionCode = default(string), string resourceGroupNo = default(string), string resourceNo = default(string), string status = default(string), decimal? statusAsInt = default(decimal?), string statusName = default(string), bool? stopProduction = default(bool?), string symptomCode = default(string), string vendorNo = default(string), string maintenanceType = default(string), bool? comment = default(bool?), string listFields = default(string), string detailFields = default(string), string resourceNoFilter = default(string))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.ClosingDate = closingDate;
            this.ClosingNote = closingNote;
            this.ContractReferenceNo = contractReferenceNo;
            this.Description = description;
            this.ExternalMaintenance = externalMaintenance;
            this.FaultAreaCode = faultAreaCode;
            this.FaultCode = faultCode;
            this.FaultReasonCode = faultReasonCode;
            this.FaultSubAreaCode = faultSubAreaCode;
            this.FromWorkRequest = fromWorkRequest;
            this.MachineNo = machineNo;
            this.MaintenanceCycleNo = maintenanceCycleNo;
            this.MaintenanceCycleVersion = maintenanceCycleVersion;
            this.MaintenancePointNo = maintenancePointNo;
            this.MaintenanceTypeCode = maintenanceTypeCode;
            this.MaintenanceWorkTypeCode = maintenanceWorkTypeCode;
            this.No = no;
            this.PlannedStartingDateTime = plannedStartingDateTime;
            this.PredictedMaintenanceTime = predictedMaintenanceTime;
            this.PriorityStatus = priorityStatus;
            this.PriorityStatusAsInt = priorityStatusAsInt;
            this.PriorityStatusName = priorityStatusName;
            this.ResolutionCode = resolutionCode;
            this.ResourceGroupNo = resourceGroupNo;
            this.ResourceNo = resourceNo;
            this.Status = status;
            this.StatusAsInt = statusAsInt;
            this.StatusName = statusName;
            this.StopProduction = stopProduction;
            this.SymptomCode = symptomCode;
            this.VendorNo = vendorNo;
            this.MaintenanceType = maintenanceType;
            this.Comment = comment;
            this.ListFields = listFields;
            this.DetailFields = detailFields;
            this.ResourceNoFilter = resourceNoFilter;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// closingDate
        /// </summary>
        /// <value>closingDate</value>
        [DataMember(Name="closingDate", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? ClosingDate { get; set; }

        /// <summary>
        /// closingNote
        /// </summary>
        /// <value>closingNote</value>
        [DataMember(Name="closingNote", EmitDefaultValue=false)]
        public string ClosingNote { get; set; }

        /// <summary>
        /// contractReferenceNo
        /// </summary>
        /// <value>contractReferenceNo</value>
        [DataMember(Name="contractReferenceNo", EmitDefaultValue=false)]
        public string ContractReferenceNo { get; set; }

        /// <summary>
        /// description
        /// </summary>
        /// <value>description</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// externalMaintenance
        /// </summary>
        /// <value>externalMaintenance</value>
        [DataMember(Name="externalMaintenance", EmitDefaultValue=false)]
        public bool? ExternalMaintenance { get; set; }

        /// <summary>
        /// faultAreaCode
        /// </summary>
        /// <value>faultAreaCode</value>
        [DataMember(Name="faultAreaCode", EmitDefaultValue=false)]
        public string FaultAreaCode { get; set; }

        /// <summary>
        /// faultCode
        /// </summary>
        /// <value>faultCode</value>
        [DataMember(Name="faultCode", EmitDefaultValue=false)]
        public string FaultCode { get; set; }

        /// <summary>
        /// faultReasonCode
        /// </summary>
        /// <value>faultReasonCode</value>
        [DataMember(Name="faultReasonCode", EmitDefaultValue=false)]
        public string FaultReasonCode { get; set; }

        /// <summary>
        /// faultSubAreaCode
        /// </summary>
        /// <value>faultSubAreaCode</value>
        [DataMember(Name="faultSubAreaCode", EmitDefaultValue=false)]
        public string FaultSubAreaCode { get; set; }

        /// <summary>
        /// fromWorkRequest
        /// </summary>
        /// <value>fromWorkRequest</value>
        [DataMember(Name="fromWorkRequest", EmitDefaultValue=false)]
        public string FromWorkRequest { get; set; }

        /// <summary>
        /// machineNo
        /// </summary>
        /// <value>machineNo</value>
        [DataMember(Name="machineNo", EmitDefaultValue=false)]
        public string MachineNo { get; set; }

        /// <summary>
        /// maintenanceCycleNo
        /// </summary>
        /// <value>maintenanceCycleNo</value>
        [DataMember(Name="maintenanceCycleNo", EmitDefaultValue=false)]
        public string MaintenanceCycleNo { get; set; }

        /// <summary>
        /// maintenanceCycleVersion
        /// </summary>
        /// <value>maintenanceCycleVersion</value>
        [DataMember(Name="maintenanceCycleVersion", EmitDefaultValue=false)]
        public string MaintenanceCycleVersion { get; set; }

        /// <summary>
        /// maintenancePointNo
        /// </summary>
        /// <value>maintenancePointNo</value>
        [DataMember(Name="maintenancePointNo", EmitDefaultValue=false)]
        public string MaintenancePointNo { get; set; }

        /// <summary>
        /// maintenanceTypeCode
        /// </summary>
        /// <value>maintenanceTypeCode</value>
        [DataMember(Name="maintenanceTypeCode", EmitDefaultValue=false)]
        public string MaintenanceTypeCode { get; set; }

        /// <summary>
        /// maintenanceWorkTypeCode
        /// </summary>
        /// <value>maintenanceWorkTypeCode</value>
        [DataMember(Name="maintenanceWorkTypeCode", EmitDefaultValue=false)]
        public string MaintenanceWorkTypeCode { get; set; }

        /// <summary>
        /// no
        /// </summary>
        /// <value>no</value>
        [DataMember(Name="no", EmitDefaultValue=false)]
        public string No { get; set; }

        /// <summary>
        /// plannedStartingDateTime
        /// </summary>
        /// <value>plannedStartingDateTime</value>
        [DataMember(Name="plannedStartingDateTime", EmitDefaultValue=false)]
        public DateTime? PlannedStartingDateTime { get; set; }

        /// <summary>
        /// predictedMaintenanceTime
        /// </summary>
        /// <value>predictedMaintenanceTime</value>
        [DataMember(Name="predictedMaintenanceTime", EmitDefaultValue=false)]
        public decimal? PredictedMaintenanceTime { get; set; }

        /// <summary>
        /// priorityStatus
        /// </summary>
        /// <value>priorityStatus</value>
        [DataMember(Name="priorityStatus", EmitDefaultValue=false)]
        public string PriorityStatus { get; set; }

        /// <summary>
        /// priorityStatusAsInt
        /// </summary>
        /// <value>priorityStatusAsInt</value>
        [DataMember(Name="priorityStatusAsInt", EmitDefaultValue=false)]
        public decimal? PriorityStatusAsInt { get; set; }

        /// <summary>
        /// priorityStatusName
        /// </summary>
        /// <value>priorityStatusName</value>
        [DataMember(Name="priorityStatusName", EmitDefaultValue=false)]
        public string PriorityStatusName { get; set; }

        /// <summary>
        /// resolutionCode
        /// </summary>
        /// <value>resolutionCode</value>
        [DataMember(Name="resolutionCode", EmitDefaultValue=false)]
        public string ResolutionCode { get; set; }

        /// <summary>
        /// resourceGroupNo
        /// </summary>
        /// <value>resourceGroupNo</value>
        [DataMember(Name="resourceGroupNo", EmitDefaultValue=false)]
        public string ResourceGroupNo { get; set; }

        /// <summary>
        /// resourceNo
        /// </summary>
        /// <value>resourceNo</value>
        [DataMember(Name="resourceNo", EmitDefaultValue=false)]
        public string ResourceNo { get; set; }

        /// <summary>
        /// status
        /// </summary>
        /// <value>status</value>
        [DataMember(Name="status", EmitDefaultValue=false)]
        public string Status { get; set; }

        /// <summary>
        /// statusAsInt
        /// </summary>
        /// <value>statusAsInt</value>
        [DataMember(Name="statusAsInt", EmitDefaultValue=false)]
        public decimal? StatusAsInt { get; set; }

        /// <summary>
        /// statusName
        /// </summary>
        /// <value>statusName</value>
        [DataMember(Name="statusName", EmitDefaultValue=false)]
        public string StatusName { get; set; }

        /// <summary>
        /// stopProduction
        /// </summary>
        /// <value>stopProduction</value>
        [DataMember(Name="stopProduction", EmitDefaultValue=false)]
        public bool? StopProduction { get; set; }

        /// <summary>
        /// symptomCode
        /// </summary>
        /// <value>symptomCode</value>
        [DataMember(Name="symptomCode", EmitDefaultValue=false)]
        public string SymptomCode { get; set; }

        /// <summary>
        /// vendorNo
        /// </summary>
        /// <value>vendorNo</value>
        [DataMember(Name="vendorNo", EmitDefaultValue=false)]
        public string VendorNo { get; set; }

        /// <summary>
        /// maintenanceType
        /// </summary>
        /// <value>maintenanceType</value>
        [DataMember(Name="maintenanceType", EmitDefaultValue=false)]
        public string MaintenanceType { get; set; }

        /// <summary>
        /// comment
        /// </summary>
        /// <value>comment</value>
        [DataMember(Name="comment", EmitDefaultValue=false)]
        public bool? Comment { get; set; }

        /// <summary>
        /// listFields
        /// </summary>
        /// <value>listFields</value>
        [DataMember(Name="listFields", EmitDefaultValue=false)]
        public string ListFields { get; set; }

        /// <summary>
        /// detailFields
        /// </summary>
        /// <value>detailFields</value>
        [DataMember(Name="detailFields", EmitDefaultValue=false)]
        public string DetailFields { get; set; }

        /// <summary>
        /// resourceNoFilter
        /// </summary>
        /// <value>resourceNoFilter</value>
        [DataMember(Name="resourceNoFilter", EmitDefaultValue=false)]
        public string ResourceNoFilter { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault17Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  ClosingDate: ").Append(ClosingDate).Append("\n");
            sb.Append("  ClosingNote: ").Append(ClosingNote).Append("\n");
            sb.Append("  ContractReferenceNo: ").Append(ContractReferenceNo).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ExternalMaintenance: ").Append(ExternalMaintenance).Append("\n");
            sb.Append("  FaultAreaCode: ").Append(FaultAreaCode).Append("\n");
            sb.Append("  FaultCode: ").Append(FaultCode).Append("\n");
            sb.Append("  FaultReasonCode: ").Append(FaultReasonCode).Append("\n");
            sb.Append("  FaultSubAreaCode: ").Append(FaultSubAreaCode).Append("\n");
            sb.Append("  FromWorkRequest: ").Append(FromWorkRequest).Append("\n");
            sb.Append("  MachineNo: ").Append(MachineNo).Append("\n");
            sb.Append("  MaintenanceCycleNo: ").Append(MaintenanceCycleNo).Append("\n");
            sb.Append("  MaintenanceCycleVersion: ").Append(MaintenanceCycleVersion).Append("\n");
            sb.Append("  MaintenancePointNo: ").Append(MaintenancePointNo).Append("\n");
            sb.Append("  MaintenanceTypeCode: ").Append(MaintenanceTypeCode).Append("\n");
            sb.Append("  MaintenanceWorkTypeCode: ").Append(MaintenanceWorkTypeCode).Append("\n");
            sb.Append("  No: ").Append(No).Append("\n");
            sb.Append("  PlannedStartingDateTime: ").Append(PlannedStartingDateTime).Append("\n");
            sb.Append("  PredictedMaintenanceTime: ").Append(PredictedMaintenanceTime).Append("\n");
            sb.Append("  PriorityStatus: ").Append(PriorityStatus).Append("\n");
            sb.Append("  PriorityStatusAsInt: ").Append(PriorityStatusAsInt).Append("\n");
            sb.Append("  PriorityStatusName: ").Append(PriorityStatusName).Append("\n");
            sb.Append("  ResolutionCode: ").Append(ResolutionCode).Append("\n");
            sb.Append("  ResourceGroupNo: ").Append(ResourceGroupNo).Append("\n");
            sb.Append("  ResourceNo: ").Append(ResourceNo).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusAsInt: ").Append(StatusAsInt).Append("\n");
            sb.Append("  StatusName: ").Append(StatusName).Append("\n");
            sb.Append("  StopProduction: ").Append(StopProduction).Append("\n");
            sb.Append("  SymptomCode: ").Append(SymptomCode).Append("\n");
            sb.Append("  VendorNo: ").Append(VendorNo).Append("\n");
            sb.Append("  MaintenanceType: ").Append(MaintenanceType).Append("\n");
            sb.Append("  Comment: ").Append(Comment).Append("\n");
            sb.Append("  ListFields: ").Append(ListFields).Append("\n");
            sb.Append("  DetailFields: ").Append(DetailFields).Append("\n");
            sb.Append("  ResourceNoFilter: ").Append(ResourceNoFilter).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault17Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault17Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault17Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault17Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.ClosingDate == input.ClosingDate ||
                    (this.ClosingDate != null &&
                    this.ClosingDate.Equals(input.ClosingDate))
                ) && 
                (
                    this.ClosingNote == input.ClosingNote ||
                    (this.ClosingNote != null &&
                    this.ClosingNote.Equals(input.ClosingNote))
                ) && 
                (
                    this.ContractReferenceNo == input.ContractReferenceNo ||
                    (this.ContractReferenceNo != null &&
                    this.ContractReferenceNo.Equals(input.ContractReferenceNo))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ExternalMaintenance == input.ExternalMaintenance ||
                    (this.ExternalMaintenance != null &&
                    this.ExternalMaintenance.Equals(input.ExternalMaintenance))
                ) && 
                (
                    this.FaultAreaCode == input.FaultAreaCode ||
                    (this.FaultAreaCode != null &&
                    this.FaultAreaCode.Equals(input.FaultAreaCode))
                ) && 
                (
                    this.FaultCode == input.FaultCode ||
                    (this.FaultCode != null &&
                    this.FaultCode.Equals(input.FaultCode))
                ) && 
                (
                    this.FaultReasonCode == input.FaultReasonCode ||
                    (this.FaultReasonCode != null &&
                    this.FaultReasonCode.Equals(input.FaultReasonCode))
                ) && 
                (
                    this.FaultSubAreaCode == input.FaultSubAreaCode ||
                    (this.FaultSubAreaCode != null &&
                    this.FaultSubAreaCode.Equals(input.FaultSubAreaCode))
                ) && 
                (
                    this.FromWorkRequest == input.FromWorkRequest ||
                    (this.FromWorkRequest != null &&
                    this.FromWorkRequest.Equals(input.FromWorkRequest))
                ) && 
                (
                    this.MachineNo == input.MachineNo ||
                    (this.MachineNo != null &&
                    this.MachineNo.Equals(input.MachineNo))
                ) && 
                (
                    this.MaintenanceCycleNo == input.MaintenanceCycleNo ||
                    (this.MaintenanceCycleNo != null &&
                    this.MaintenanceCycleNo.Equals(input.MaintenanceCycleNo))
                ) && 
                (
                    this.MaintenanceCycleVersion == input.MaintenanceCycleVersion ||
                    (this.MaintenanceCycleVersion != null &&
                    this.MaintenanceCycleVersion.Equals(input.MaintenanceCycleVersion))
                ) && 
                (
                    this.MaintenancePointNo == input.MaintenancePointNo ||
                    (this.MaintenancePointNo != null &&
                    this.MaintenancePointNo.Equals(input.MaintenancePointNo))
                ) && 
                (
                    this.MaintenanceTypeCode == input.MaintenanceTypeCode ||
                    (this.MaintenanceTypeCode != null &&
                    this.MaintenanceTypeCode.Equals(input.MaintenanceTypeCode))
                ) && 
                (
                    this.MaintenanceWorkTypeCode == input.MaintenanceWorkTypeCode ||
                    (this.MaintenanceWorkTypeCode != null &&
                    this.MaintenanceWorkTypeCode.Equals(input.MaintenanceWorkTypeCode))
                ) && 
                (
                    this.No == input.No ||
                    (this.No != null &&
                    this.No.Equals(input.No))
                ) && 
                (
                    this.PlannedStartingDateTime == input.PlannedStartingDateTime ||
                    (this.PlannedStartingDateTime != null &&
                    this.PlannedStartingDateTime.Equals(input.PlannedStartingDateTime))
                ) && 
                (
                    this.PredictedMaintenanceTime == input.PredictedMaintenanceTime ||
                    (this.PredictedMaintenanceTime != null &&
                    this.PredictedMaintenanceTime.Equals(input.PredictedMaintenanceTime))
                ) && 
                (
                    this.PriorityStatus == input.PriorityStatus ||
                    (this.PriorityStatus != null &&
                    this.PriorityStatus.Equals(input.PriorityStatus))
                ) && 
                (
                    this.PriorityStatusAsInt == input.PriorityStatusAsInt ||
                    (this.PriorityStatusAsInt != null &&
                    this.PriorityStatusAsInt.Equals(input.PriorityStatusAsInt))
                ) && 
                (
                    this.PriorityStatusName == input.PriorityStatusName ||
                    (this.PriorityStatusName != null &&
                    this.PriorityStatusName.Equals(input.PriorityStatusName))
                ) && 
                (
                    this.ResolutionCode == input.ResolutionCode ||
                    (this.ResolutionCode != null &&
                    this.ResolutionCode.Equals(input.ResolutionCode))
                ) && 
                (
                    this.ResourceGroupNo == input.ResourceGroupNo ||
                    (this.ResourceGroupNo != null &&
                    this.ResourceGroupNo.Equals(input.ResourceGroupNo))
                ) && 
                (
                    this.ResourceNo == input.ResourceNo ||
                    (this.ResourceNo != null &&
                    this.ResourceNo.Equals(input.ResourceNo))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StatusAsInt == input.StatusAsInt ||
                    (this.StatusAsInt != null &&
                    this.StatusAsInt.Equals(input.StatusAsInt))
                ) && 
                (
                    this.StatusName == input.StatusName ||
                    (this.StatusName != null &&
                    this.StatusName.Equals(input.StatusName))
                ) && 
                (
                    this.StopProduction == input.StopProduction ||
                    (this.StopProduction != null &&
                    this.StopProduction.Equals(input.StopProduction))
                ) && 
                (
                    this.SymptomCode == input.SymptomCode ||
                    (this.SymptomCode != null &&
                    this.SymptomCode.Equals(input.SymptomCode))
                ) && 
                (
                    this.VendorNo == input.VendorNo ||
                    (this.VendorNo != null &&
                    this.VendorNo.Equals(input.VendorNo))
                ) && 
                (
                    this.MaintenanceType == input.MaintenanceType ||
                    (this.MaintenanceType != null &&
                    this.MaintenanceType.Equals(input.MaintenanceType))
                ) && 
                (
                    this.Comment == input.Comment ||
                    (this.Comment != null &&
                    this.Comment.Equals(input.Comment))
                ) && 
                (
                    this.ListFields == input.ListFields ||
                    (this.ListFields != null &&
                    this.ListFields.Equals(input.ListFields))
                ) && 
                (
                    this.DetailFields == input.DetailFields ||
                    (this.DetailFields != null &&
                    this.DetailFields.Equals(input.DetailFields))
                ) && 
                (
                    this.ResourceNoFilter == input.ResourceNoFilter ||
                    (this.ResourceNoFilter != null &&
                    this.ResourceNoFilter.Equals(input.ResourceNoFilter))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.ClosingDate != null)
                    hashCode = hashCode * 59 + this.ClosingDate.GetHashCode();
                if (this.ClosingNote != null)
                    hashCode = hashCode * 59 + this.ClosingNote.GetHashCode();
                if (this.ContractReferenceNo != null)
                    hashCode = hashCode * 59 + this.ContractReferenceNo.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ExternalMaintenance != null)
                    hashCode = hashCode * 59 + this.ExternalMaintenance.GetHashCode();
                if (this.FaultAreaCode != null)
                    hashCode = hashCode * 59 + this.FaultAreaCode.GetHashCode();
                if (this.FaultCode != null)
                    hashCode = hashCode * 59 + this.FaultCode.GetHashCode();
                if (this.FaultReasonCode != null)
                    hashCode = hashCode * 59 + this.FaultReasonCode.GetHashCode();
                if (this.FaultSubAreaCode != null)
                    hashCode = hashCode * 59 + this.FaultSubAreaCode.GetHashCode();
                if (this.FromWorkRequest != null)
                    hashCode = hashCode * 59 + this.FromWorkRequest.GetHashCode();
                if (this.MachineNo != null)
                    hashCode = hashCode * 59 + this.MachineNo.GetHashCode();
                if (this.MaintenanceCycleNo != null)
                    hashCode = hashCode * 59 + this.MaintenanceCycleNo.GetHashCode();
                if (this.MaintenanceCycleVersion != null)
                    hashCode = hashCode * 59 + this.MaintenanceCycleVersion.GetHashCode();
                if (this.MaintenancePointNo != null)
                    hashCode = hashCode * 59 + this.MaintenancePointNo.GetHashCode();
                if (this.MaintenanceTypeCode != null)
                    hashCode = hashCode * 59 + this.MaintenanceTypeCode.GetHashCode();
                if (this.MaintenanceWorkTypeCode != null)
                    hashCode = hashCode * 59 + this.MaintenanceWorkTypeCode.GetHashCode();
                if (this.No != null)
                    hashCode = hashCode * 59 + this.No.GetHashCode();
                if (this.PlannedStartingDateTime != null)
                    hashCode = hashCode * 59 + this.PlannedStartingDateTime.GetHashCode();
                if (this.PredictedMaintenanceTime != null)
                    hashCode = hashCode * 59 + this.PredictedMaintenanceTime.GetHashCode();
                if (this.PriorityStatus != null)
                    hashCode = hashCode * 59 + this.PriorityStatus.GetHashCode();
                if (this.PriorityStatusAsInt != null)
                    hashCode = hashCode * 59 + this.PriorityStatusAsInt.GetHashCode();
                if (this.PriorityStatusName != null)
                    hashCode = hashCode * 59 + this.PriorityStatusName.GetHashCode();
                if (this.ResolutionCode != null)
                    hashCode = hashCode * 59 + this.ResolutionCode.GetHashCode();
                if (this.ResourceGroupNo != null)
                    hashCode = hashCode * 59 + this.ResourceGroupNo.GetHashCode();
                if (this.ResourceNo != null)
                    hashCode = hashCode * 59 + this.ResourceNo.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusAsInt != null)
                    hashCode = hashCode * 59 + this.StatusAsInt.GetHashCode();
                if (this.StatusName != null)
                    hashCode = hashCode * 59 + this.StatusName.GetHashCode();
                if (this.StopProduction != null)
                    hashCode = hashCode * 59 + this.StopProduction.GetHashCode();
                if (this.SymptomCode != null)
                    hashCode = hashCode * 59 + this.SymptomCode.GetHashCode();
                if (this.VendorNo != null)
                    hashCode = hashCode * 59 + this.VendorNo.GetHashCode();
                if (this.MaintenanceType != null)
                    hashCode = hashCode * 59 + this.MaintenanceType.GetHashCode();
                if (this.Comment != null)
                    hashCode = hashCode * 59 + this.Comment.GetHashCode();
                if (this.ListFields != null)
                    hashCode = hashCode * 59 + this.ListFields.GetHashCode();
                if (this.DetailFields != null)
                    hashCode = hashCode * 59 + this.DetailFields.GetHashCode();
                if (this.ResourceNoFilter != null)
                    hashCode = hashCode * 59 + this.ResourceNoFilter.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
