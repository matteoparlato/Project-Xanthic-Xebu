/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault28Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault28Value :  IEquatable<InlineResponseDefault28Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault28Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="employeeNo">employeeNo.</param>
        /// <param name="badgeNo">badgeNo.</param>
        /// <param name="badgeMD5Hash">badgeMD5Hash.</param>
        /// <param name="employeeSearchName">employeeSearchName.</param>
        /// <param name="resourceNo">resourceNo.</param>
        /// <param name="resourceGroupNo">resourceGroupNo.</param>
        /// <param name="locationFilter">locationFilter.</param>
        /// <param name="defaultLocationCode">defaultLocationCode.</param>
        /// <param name="languageId">languageId.</param>
        /// <param name="languageTag">languageTag.</param>
        /// <param name="themeName">themeName.</param>
        /// <param name="additionalFields">additionalFields.</param>
        public InlineResponseDefault28Value(string odataEtag = default(string), string systemId = default(string), string employeeNo = default(string), string badgeNo = default(string), string badgeMD5Hash = default(string), string employeeSearchName = default(string), string resourceNo = default(string), string resourceGroupNo = default(string), string locationFilter = default(string), string defaultLocationCode = default(string), string languageId = default(string), string languageTag = default(string), string themeName = default(string), string additionalFields = default(string))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.EmployeeNo = employeeNo;
            this.BadgeNo = badgeNo;
            this.BadgeMD5Hash = badgeMD5Hash;
            this.EmployeeSearchName = employeeSearchName;
            this.ResourceNo = resourceNo;
            this.ResourceGroupNo = resourceGroupNo;
            this.LocationFilter = locationFilter;
            this.DefaultLocationCode = defaultLocationCode;
            this.LanguageId = languageId;
            this.LanguageTag = languageTag;
            this.ThemeName = themeName;
            this.AdditionalFields = additionalFields;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// employeeNo
        /// </summary>
        /// <value>employeeNo</value>
        [DataMember(Name="employeeNo", EmitDefaultValue=false)]
        public string EmployeeNo { get; set; }

        /// <summary>
        /// badgeNo
        /// </summary>
        /// <value>badgeNo</value>
        [DataMember(Name="badgeNo", EmitDefaultValue=false)]
        public string BadgeNo { get; set; }

        /// <summary>
        /// badgeMD5Hash
        /// </summary>
        /// <value>badgeMD5Hash</value>
        [DataMember(Name="badgeMD5Hash", EmitDefaultValue=false)]
        public string BadgeMD5Hash { get; set; }

        /// <summary>
        /// employeeSearchName
        /// </summary>
        /// <value>employeeSearchName</value>
        [DataMember(Name="employeeSearchName", EmitDefaultValue=false)]
        public string EmployeeSearchName { get; set; }

        /// <summary>
        /// resourceNo
        /// </summary>
        /// <value>resourceNo</value>
        [DataMember(Name="resourceNo", EmitDefaultValue=false)]
        public string ResourceNo { get; set; }

        /// <summary>
        /// resourceGroupNo
        /// </summary>
        /// <value>resourceGroupNo</value>
        [DataMember(Name="resourceGroupNo", EmitDefaultValue=false)]
        public string ResourceGroupNo { get; set; }

        /// <summary>
        /// locationFilter
        /// </summary>
        /// <value>locationFilter</value>
        [DataMember(Name="locationFilter", EmitDefaultValue=false)]
        public string LocationFilter { get; set; }

        /// <summary>
        /// defaultLocationCode
        /// </summary>
        /// <value>defaultLocationCode</value>
        [DataMember(Name="defaultLocationCode", EmitDefaultValue=false)]
        public string DefaultLocationCode { get; set; }

        /// <summary>
        /// languageId
        /// </summary>
        /// <value>languageId</value>
        [DataMember(Name="languageId", EmitDefaultValue=false)]
        public string LanguageId { get; set; }

        /// <summary>
        /// languageTag
        /// </summary>
        /// <value>languageTag</value>
        [DataMember(Name="languageTag", EmitDefaultValue=false)]
        public string LanguageTag { get; set; }

        /// <summary>
        /// themeName
        /// </summary>
        /// <value>themeName</value>
        [DataMember(Name="themeName", EmitDefaultValue=false)]
        public string ThemeName { get; set; }

        /// <summary>
        /// additionalFields
        /// </summary>
        /// <value>additionalFields</value>
        [DataMember(Name="additionalFields", EmitDefaultValue=false)]
        public string AdditionalFields { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault28Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  EmployeeNo: ").Append(EmployeeNo).Append("\n");
            sb.Append("  BadgeNo: ").Append(BadgeNo).Append("\n");
            sb.Append("  BadgeMD5Hash: ").Append(BadgeMD5Hash).Append("\n");
            sb.Append("  EmployeeSearchName: ").Append(EmployeeSearchName).Append("\n");
            sb.Append("  ResourceNo: ").Append(ResourceNo).Append("\n");
            sb.Append("  ResourceGroupNo: ").Append(ResourceGroupNo).Append("\n");
            sb.Append("  LocationFilter: ").Append(LocationFilter).Append("\n");
            sb.Append("  DefaultLocationCode: ").Append(DefaultLocationCode).Append("\n");
            sb.Append("  LanguageId: ").Append(LanguageId).Append("\n");
            sb.Append("  LanguageTag: ").Append(LanguageTag).Append("\n");
            sb.Append("  ThemeName: ").Append(ThemeName).Append("\n");
            sb.Append("  AdditionalFields: ").Append(AdditionalFields).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault28Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault28Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault28Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault28Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.EmployeeNo == input.EmployeeNo ||
                    (this.EmployeeNo != null &&
                    this.EmployeeNo.Equals(input.EmployeeNo))
                ) && 
                (
                    this.BadgeNo == input.BadgeNo ||
                    (this.BadgeNo != null &&
                    this.BadgeNo.Equals(input.BadgeNo))
                ) && 
                (
                    this.BadgeMD5Hash == input.BadgeMD5Hash ||
                    (this.BadgeMD5Hash != null &&
                    this.BadgeMD5Hash.Equals(input.BadgeMD5Hash))
                ) && 
                (
                    this.EmployeeSearchName == input.EmployeeSearchName ||
                    (this.EmployeeSearchName != null &&
                    this.EmployeeSearchName.Equals(input.EmployeeSearchName))
                ) && 
                (
                    this.ResourceNo == input.ResourceNo ||
                    (this.ResourceNo != null &&
                    this.ResourceNo.Equals(input.ResourceNo))
                ) && 
                (
                    this.ResourceGroupNo == input.ResourceGroupNo ||
                    (this.ResourceGroupNo != null &&
                    this.ResourceGroupNo.Equals(input.ResourceGroupNo))
                ) && 
                (
                    this.LocationFilter == input.LocationFilter ||
                    (this.LocationFilter != null &&
                    this.LocationFilter.Equals(input.LocationFilter))
                ) && 
                (
                    this.DefaultLocationCode == input.DefaultLocationCode ||
                    (this.DefaultLocationCode != null &&
                    this.DefaultLocationCode.Equals(input.DefaultLocationCode))
                ) && 
                (
                    this.LanguageId == input.LanguageId ||
                    (this.LanguageId != null &&
                    this.LanguageId.Equals(input.LanguageId))
                ) && 
                (
                    this.LanguageTag == input.LanguageTag ||
                    (this.LanguageTag != null &&
                    this.LanguageTag.Equals(input.LanguageTag))
                ) && 
                (
                    this.ThemeName == input.ThemeName ||
                    (this.ThemeName != null &&
                    this.ThemeName.Equals(input.ThemeName))
                ) && 
                (
                    this.AdditionalFields == input.AdditionalFields ||
                    (this.AdditionalFields != null &&
                    this.AdditionalFields.Equals(input.AdditionalFields))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.EmployeeNo != null)
                    hashCode = hashCode * 59 + this.EmployeeNo.GetHashCode();
                if (this.BadgeNo != null)
                    hashCode = hashCode * 59 + this.BadgeNo.GetHashCode();
                if (this.BadgeMD5Hash != null)
                    hashCode = hashCode * 59 + this.BadgeMD5Hash.GetHashCode();
                if (this.EmployeeSearchName != null)
                    hashCode = hashCode * 59 + this.EmployeeSearchName.GetHashCode();
                if (this.ResourceNo != null)
                    hashCode = hashCode * 59 + this.ResourceNo.GetHashCode();
                if (this.ResourceGroupNo != null)
                    hashCode = hashCode * 59 + this.ResourceGroupNo.GetHashCode();
                if (this.LocationFilter != null)
                    hashCode = hashCode * 59 + this.LocationFilter.GetHashCode();
                if (this.DefaultLocationCode != null)
                    hashCode = hashCode * 59 + this.DefaultLocationCode.GetHashCode();
                if (this.LanguageId != null)
                    hashCode = hashCode * 59 + this.LanguageId.GetHashCode();
                if (this.LanguageTag != null)
                    hashCode = hashCode * 59 + this.LanguageTag.GetHashCode();
                if (this.ThemeName != null)
                    hashCode = hashCode * 59 + this.ThemeName.GetHashCode();
                if (this.AdditionalFields != null)
                    hashCode = hashCode * 59 + this.AdditionalFields.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
