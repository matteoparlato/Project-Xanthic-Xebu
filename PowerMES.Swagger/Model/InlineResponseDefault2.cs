/* 
 * Power MES Connector
 *
 * The custom connector used by Power MES by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault2
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault2 :  IEquatable<InlineResponseDefault2>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault2" /> class.
        /// </summary>
        /// <param name="lastUpdated">lastUpdated.</param>
        /// <param name="connectionState">connectionState.</param>
        /// <param name="properties">properties.</param>
        public InlineResponseDefault2(string lastUpdated = default(string), string connectionState = default(string), List<InlineResponseDefault2Properties> properties = default(List<InlineResponseDefault2Properties>))
        {
            this.LastUpdated = lastUpdated;
            this.ConnectionState = connectionState;
            this.Properties = properties;
        }
        
        /// <summary>
        /// lastUpdated
        /// </summary>
        /// <value>lastUpdated</value>
        [DataMember(Name="lastUpdated", EmitDefaultValue=false)]
        public string LastUpdated { get; set; }

        /// <summary>
        /// connectionState
        /// </summary>
        /// <value>connectionState</value>
        [DataMember(Name="connectionState", EmitDefaultValue=false)]
        public string ConnectionState { get; set; }

        /// <summary>
        /// properties
        /// </summary>
        /// <value>properties</value>
        [DataMember(Name="properties", EmitDefaultValue=false)]
        public List<InlineResponseDefault2Properties> Properties { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault2 {\n");
            sb.Append("  LastUpdated: ").Append(LastUpdated).Append("\n");
            sb.Append("  ConnectionState: ").Append(ConnectionState).Append("\n");
            sb.Append("  Properties: ").Append(Properties).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault2);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault2 instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault2 to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault2 input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.LastUpdated == input.LastUpdated ||
                    (this.LastUpdated != null &&
                    this.LastUpdated.Equals(input.LastUpdated))
                ) && 
                (
                    this.ConnectionState == input.ConnectionState ||
                    (this.ConnectionState != null &&
                    this.ConnectionState.Equals(input.ConnectionState))
                ) && 
                (
                    this.Properties == input.Properties ||
                    this.Properties != null &&
                    input.Properties != null &&
                    this.Properties.SequenceEqual(input.Properties)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.LastUpdated != null)
                    hashCode = hashCode * 59 + this.LastUpdated.GetHashCode();
                if (this.ConnectionState != null)
                    hashCode = hashCode * 59 + this.ConnectionState.GetHashCode();
                if (this.Properties != null)
                    hashCode = hashCode * 59 + this.Properties.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
