/* 
 * Power MES Connector
 *
 * The custom connector used by Power MES by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault4Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault4Value :  IEquatable<InlineResponseDefault4Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault4Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="hubName">hubName.</param>
        /// <param name="sasToken">sasToken.</param>
        /// <param name="apiVersion">apiVersion.</param>
        public InlineResponseDefault4Value(string odataEtag = default(string), string systemId = default(string), string hubName = default(string), string sasToken = default(string), string apiVersion = default(string))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.HubName = hubName;
            this.SasToken = sasToken;
            this.ApiVersion = apiVersion;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// hubName
        /// </summary>
        /// <value>hubName</value>
        [DataMember(Name="hubName", EmitDefaultValue=false)]
        public string HubName { get; set; }

        /// <summary>
        /// sasToken
        /// </summary>
        /// <value>sasToken</value>
        [DataMember(Name="sasToken", EmitDefaultValue=false)]
        public string SasToken { get; set; }

        /// <summary>
        /// apiVersion
        /// </summary>
        /// <value>apiVersion</value>
        [DataMember(Name="apiVersion", EmitDefaultValue=false)]
        public string ApiVersion { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault4Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  HubName: ").Append(HubName).Append("\n");
            sb.Append("  SasToken: ").Append(SasToken).Append("\n");
            sb.Append("  ApiVersion: ").Append(ApiVersion).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault4Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault4Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault4Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault4Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.HubName == input.HubName ||
                    (this.HubName != null &&
                    this.HubName.Equals(input.HubName))
                ) && 
                (
                    this.SasToken == input.SasToken ||
                    (this.SasToken != null &&
                    this.SasToken.Equals(input.SasToken))
                ) && 
                (
                    this.ApiVersion == input.ApiVersion ||
                    (this.ApiVersion != null &&
                    this.ApiVersion.Equals(input.ApiVersion))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.HubName != null)
                    hashCode = hashCode * 59 + this.HubName.GetHashCode();
                if (this.SasToken != null)
                    hashCode = hashCode * 59 + this.SasToken.GetHashCode();
                if (this.ApiVersion != null)
                    hashCode = hashCode * 59 + this.ApiVersion.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
