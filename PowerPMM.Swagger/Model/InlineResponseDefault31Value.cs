/* 
 * Power PLM Connector
 *
 * The custom connector used by Power PLM by EOS Solutions.
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;
namespace IO.Swagger.Model
{
    /// <summary>
    /// InlineResponseDefault31Value
    /// </summary>
    [DataContract]
        public partial class InlineResponseDefault31Value :  IEquatable<InlineResponseDefault31Value>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="InlineResponseDefault31Value" /> class.
        /// </summary>
        /// <param name="odataEtag">@odata.etag.</param>
        /// <param name="systemId">systemId.</param>
        /// <param name="workRequestNo">workRequestNo.</param>
        /// <param name="lineNo">lineNo.</param>
        /// <param name="operationNo">operationNo.</param>
        /// <param name="type">type.</param>
        /// <param name="no">no.</param>
        /// <param name="workCenterNo">workCenterNo.</param>
        /// <param name="workCenterGroupCode">workCenterGroupCode.</param>
        /// <param name="startingDateTime">startingDateTime.</param>
        /// <param name="endingDateTime">endingDateTime.</param>
        /// <param name="resourceGroupNo">resourceGroupNo.</param>
        /// <param name="operationDuration">operationDuration.</param>
        /// <param name="operationDescription">operationDescription.</param>
        /// <param name="workRequestStatus">workRequestStatus.</param>
        /// <param name="workRequestStatusAsInt">workRequestStatusAsInt.</param>
        /// <param name="workRequestStatusName">workRequestStatusName.</param>
        /// <param name="typeNoName">typeNoName.</param>
        public InlineResponseDefault31Value(string odataEtag = default(string), string systemId = default(string), string workRequestNo = default(string), decimal? lineNo = default(decimal?), string operationNo = default(string), string type = default(string), string no = default(string), string workCenterNo = default(string), string workCenterGroupCode = default(string), DateTime? startingDateTime = default(DateTime?), DateTime? endingDateTime = default(DateTime?), string resourceGroupNo = default(string), decimal? operationDuration = default(decimal?), string operationDescription = default(string), string workRequestStatus = default(string), decimal? workRequestStatusAsInt = default(decimal?), string workRequestStatusName = default(string), string typeNoName = default(string))
        {
            this.OdataEtag = odataEtag;
            this.SystemId = systemId;
            this.WorkRequestNo = workRequestNo;
            this.LineNo = lineNo;
            this.OperationNo = operationNo;
            this.Type = type;
            this.No = no;
            this.WorkCenterNo = workCenterNo;
            this.WorkCenterGroupCode = workCenterGroupCode;
            this.StartingDateTime = startingDateTime;
            this.EndingDateTime = endingDateTime;
            this.ResourceGroupNo = resourceGroupNo;
            this.OperationDuration = operationDuration;
            this.OperationDescription = operationDescription;
            this.WorkRequestStatus = workRequestStatus;
            this.WorkRequestStatusAsInt = workRequestStatusAsInt;
            this.WorkRequestStatusName = workRequestStatusName;
            this.TypeNoName = typeNoName;
        }
        
        /// <summary>
        /// @odata.etag
        /// </summary>
        /// <value>@odata.etag</value>
        [DataMember(Name="@odata.etag", EmitDefaultValue=false)]
        public string OdataEtag { get; set; }

        /// <summary>
        /// systemId
        /// </summary>
        /// <value>systemId</value>
        [DataMember(Name="systemId", EmitDefaultValue=false)]
        public string SystemId { get; set; }

        /// <summary>
        /// workRequestNo
        /// </summary>
        /// <value>workRequestNo</value>
        [DataMember(Name="workRequestNo", EmitDefaultValue=false)]
        public string WorkRequestNo { get; set; }

        /// <summary>
        /// lineNo
        /// </summary>
        /// <value>lineNo</value>
        [DataMember(Name="lineNo", EmitDefaultValue=false)]
        public decimal? LineNo { get; set; }

        /// <summary>
        /// operationNo
        /// </summary>
        /// <value>operationNo</value>
        [DataMember(Name="operationNo", EmitDefaultValue=false)]
        public string OperationNo { get; set; }

        /// <summary>
        /// type
        /// </summary>
        /// <value>type</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public string Type { get; set; }

        /// <summary>
        /// no
        /// </summary>
        /// <value>no</value>
        [DataMember(Name="no", EmitDefaultValue=false)]
        public string No { get; set; }

        /// <summary>
        /// workCenterNo
        /// </summary>
        /// <value>workCenterNo</value>
        [DataMember(Name="workCenterNo", EmitDefaultValue=false)]
        public string WorkCenterNo { get; set; }

        /// <summary>
        /// workCenterGroupCode
        /// </summary>
        /// <value>workCenterGroupCode</value>
        [DataMember(Name="workCenterGroupCode", EmitDefaultValue=false)]
        public string WorkCenterGroupCode { get; set; }

        /// <summary>
        /// startingDateTime
        /// </summary>
        /// <value>startingDateTime</value>
        [DataMember(Name="startingDateTime", EmitDefaultValue=false)]
        public DateTime? StartingDateTime { get; set; }

        /// <summary>
        /// endingDateTime
        /// </summary>
        /// <value>endingDateTime</value>
        [DataMember(Name="endingDateTime", EmitDefaultValue=false)]
        public DateTime? EndingDateTime { get; set; }

        /// <summary>
        /// resourceGroupNo
        /// </summary>
        /// <value>resourceGroupNo</value>
        [DataMember(Name="resourceGroupNo", EmitDefaultValue=false)]
        public string ResourceGroupNo { get; set; }

        /// <summary>
        /// operationDuration
        /// </summary>
        /// <value>operationDuration</value>
        [DataMember(Name="operationDuration", EmitDefaultValue=false)]
        public decimal? OperationDuration { get; set; }

        /// <summary>
        /// operationDescription
        /// </summary>
        /// <value>operationDescription</value>
        [DataMember(Name="operationDescription", EmitDefaultValue=false)]
        public string OperationDescription { get; set; }

        /// <summary>
        /// workRequestStatus
        /// </summary>
        /// <value>workRequestStatus</value>
        [DataMember(Name="workRequestStatus", EmitDefaultValue=false)]
        public string WorkRequestStatus { get; set; }

        /// <summary>
        /// workRequestStatusAsInt
        /// </summary>
        /// <value>workRequestStatusAsInt</value>
        [DataMember(Name="workRequestStatusAsInt", EmitDefaultValue=false)]
        public decimal? WorkRequestStatusAsInt { get; set; }

        /// <summary>
        /// workRequestStatusName
        /// </summary>
        /// <value>workRequestStatusName</value>
        [DataMember(Name="workRequestStatusName", EmitDefaultValue=false)]
        public string WorkRequestStatusName { get; set; }

        /// <summary>
        /// typeNoName
        /// </summary>
        /// <value>typeNoName</value>
        [DataMember(Name="typeNoName", EmitDefaultValue=false)]
        public string TypeNoName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class InlineResponseDefault31Value {\n");
            sb.Append("  OdataEtag: ").Append(OdataEtag).Append("\n");
            sb.Append("  SystemId: ").Append(SystemId).Append("\n");
            sb.Append("  WorkRequestNo: ").Append(WorkRequestNo).Append("\n");
            sb.Append("  LineNo: ").Append(LineNo).Append("\n");
            sb.Append("  OperationNo: ").Append(OperationNo).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("  No: ").Append(No).Append("\n");
            sb.Append("  WorkCenterNo: ").Append(WorkCenterNo).Append("\n");
            sb.Append("  WorkCenterGroupCode: ").Append(WorkCenterGroupCode).Append("\n");
            sb.Append("  StartingDateTime: ").Append(StartingDateTime).Append("\n");
            sb.Append("  EndingDateTime: ").Append(EndingDateTime).Append("\n");
            sb.Append("  ResourceGroupNo: ").Append(ResourceGroupNo).Append("\n");
            sb.Append("  OperationDuration: ").Append(OperationDuration).Append("\n");
            sb.Append("  OperationDescription: ").Append(OperationDescription).Append("\n");
            sb.Append("  WorkRequestStatus: ").Append(WorkRequestStatus).Append("\n");
            sb.Append("  WorkRequestStatusAsInt: ").Append(WorkRequestStatusAsInt).Append("\n");
            sb.Append("  WorkRequestStatusName: ").Append(WorkRequestStatusName).Append("\n");
            sb.Append("  TypeNoName: ").Append(TypeNoName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as InlineResponseDefault31Value);
        }

        /// <summary>
        /// Returns true if InlineResponseDefault31Value instances are equal
        /// </summary>
        /// <param name="input">Instance of InlineResponseDefault31Value to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(InlineResponseDefault31Value input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.OdataEtag == input.OdataEtag ||
                    (this.OdataEtag != null &&
                    this.OdataEtag.Equals(input.OdataEtag))
                ) && 
                (
                    this.SystemId == input.SystemId ||
                    (this.SystemId != null &&
                    this.SystemId.Equals(input.SystemId))
                ) && 
                (
                    this.WorkRequestNo == input.WorkRequestNo ||
                    (this.WorkRequestNo != null &&
                    this.WorkRequestNo.Equals(input.WorkRequestNo))
                ) && 
                (
                    this.LineNo == input.LineNo ||
                    (this.LineNo != null &&
                    this.LineNo.Equals(input.LineNo))
                ) && 
                (
                    this.OperationNo == input.OperationNo ||
                    (this.OperationNo != null &&
                    this.OperationNo.Equals(input.OperationNo))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.No == input.No ||
                    (this.No != null &&
                    this.No.Equals(input.No))
                ) && 
                (
                    this.WorkCenterNo == input.WorkCenterNo ||
                    (this.WorkCenterNo != null &&
                    this.WorkCenterNo.Equals(input.WorkCenterNo))
                ) && 
                (
                    this.WorkCenterGroupCode == input.WorkCenterGroupCode ||
                    (this.WorkCenterGroupCode != null &&
                    this.WorkCenterGroupCode.Equals(input.WorkCenterGroupCode))
                ) && 
                (
                    this.StartingDateTime == input.StartingDateTime ||
                    (this.StartingDateTime != null &&
                    this.StartingDateTime.Equals(input.StartingDateTime))
                ) && 
                (
                    this.EndingDateTime == input.EndingDateTime ||
                    (this.EndingDateTime != null &&
                    this.EndingDateTime.Equals(input.EndingDateTime))
                ) && 
                (
                    this.ResourceGroupNo == input.ResourceGroupNo ||
                    (this.ResourceGroupNo != null &&
                    this.ResourceGroupNo.Equals(input.ResourceGroupNo))
                ) && 
                (
                    this.OperationDuration == input.OperationDuration ||
                    (this.OperationDuration != null &&
                    this.OperationDuration.Equals(input.OperationDuration))
                ) && 
                (
                    this.OperationDescription == input.OperationDescription ||
                    (this.OperationDescription != null &&
                    this.OperationDescription.Equals(input.OperationDescription))
                ) && 
                (
                    this.WorkRequestStatus == input.WorkRequestStatus ||
                    (this.WorkRequestStatus != null &&
                    this.WorkRequestStatus.Equals(input.WorkRequestStatus))
                ) && 
                (
                    this.WorkRequestStatusAsInt == input.WorkRequestStatusAsInt ||
                    (this.WorkRequestStatusAsInt != null &&
                    this.WorkRequestStatusAsInt.Equals(input.WorkRequestStatusAsInt))
                ) && 
                (
                    this.WorkRequestStatusName == input.WorkRequestStatusName ||
                    (this.WorkRequestStatusName != null &&
                    this.WorkRequestStatusName.Equals(input.WorkRequestStatusName))
                ) && 
                (
                    this.TypeNoName == input.TypeNoName ||
                    (this.TypeNoName != null &&
                    this.TypeNoName.Equals(input.TypeNoName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.OdataEtag != null)
                    hashCode = hashCode * 59 + this.OdataEtag.GetHashCode();
                if (this.SystemId != null)
                    hashCode = hashCode * 59 + this.SystemId.GetHashCode();
                if (this.WorkRequestNo != null)
                    hashCode = hashCode * 59 + this.WorkRequestNo.GetHashCode();
                if (this.LineNo != null)
                    hashCode = hashCode * 59 + this.LineNo.GetHashCode();
                if (this.OperationNo != null)
                    hashCode = hashCode * 59 + this.OperationNo.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.No != null)
                    hashCode = hashCode * 59 + this.No.GetHashCode();
                if (this.WorkCenterNo != null)
                    hashCode = hashCode * 59 + this.WorkCenterNo.GetHashCode();
                if (this.WorkCenterGroupCode != null)
                    hashCode = hashCode * 59 + this.WorkCenterGroupCode.GetHashCode();
                if (this.StartingDateTime != null)
                    hashCode = hashCode * 59 + this.StartingDateTime.GetHashCode();
                if (this.EndingDateTime != null)
                    hashCode = hashCode * 59 + this.EndingDateTime.GetHashCode();
                if (this.ResourceGroupNo != null)
                    hashCode = hashCode * 59 + this.ResourceGroupNo.GetHashCode();
                if (this.OperationDuration != null)
                    hashCode = hashCode * 59 + this.OperationDuration.GetHashCode();
                if (this.OperationDescription != null)
                    hashCode = hashCode * 59 + this.OperationDescription.GetHashCode();
                if (this.WorkRequestStatus != null)
                    hashCode = hashCode * 59 + this.WorkRequestStatus.GetHashCode();
                if (this.WorkRequestStatusAsInt != null)
                    hashCode = hashCode * 59 + this.WorkRequestStatusAsInt.GetHashCode();
                if (this.WorkRequestStatusName != null)
                    hashCode = hashCode * 59 + this.WorkRequestStatusName.GetHashCode();
                if (this.TypeNoName != null)
                    hashCode = hashCode * 59 + this.TypeNoName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }
}
